{% extends('@FrontEnd/adminBase.html.twig') %}

{% block title %}Rollerei Brettliebe Admin - Videos{% endblock %}

{% block styles %}
    <link href="{{ asset('bundles/frontend/css/admin/controls.css') }}" rel="stylesheet"/>
<style>
    .sub-root{
        width:                              100%;

        display:                            flex;
        flex-flow:                          column nowrap;

    }
    .tool-box{
        width: 100%;

        display: flex;
        flex-flow: row nowrap;
        justify-content: center;
        align-items: center;

        padding: 10px 15px;
    }
    .video-list{
        flex-grow:                          1;

        display:                            flex;
        flex-flow:                          row wrap;
        align-items: baseline;

        padding:                            0 0 0 50px;
    }
    .video{
        min-width:                          300px;
        width:                              auto;

        display:                            flex;
        flex-flow:                          column nowrap;

        margin-right:                       20px;
        margin-bottom:                      20px;
    }
    .panel-heading .form-group{
        margin: 0;
    }
    .video-label-list{
        width:                              auto;
        flex-grow:                          1;

        display:                            flex;
        flex-flow:                          column nowrap;

    }
    .video-label{
        width:                              auto;
        min-width:                          40px;
        max-height:                         40px;

        color:                              #000;
        font-size:                          18px;
        font-style:                         normal;
        font-family:                        Arial, sans-serif;
        font-stretch:                       semi-expanded;
        text-align:                         center;
        text-decoration:                    none;

        padding:                            10px 0;
    }
    .video-name{

    }
    .video-url{

    }
    .video-created{

     }
    .video-player-container{
        flex-grow:                          1;

    }
    .video-loader{
        width: 100%;


        display:                            flex;
        flex-flow:                          row nowrap;
        justify-content:                    center;
        align-items:                        center;
    }
    .video-loader-text{
        flex-grow:                           1;
    }
    .loading-animation{
        width:                                  20px;
        height:                                 100%;
    }
    .video-loader.loading{
        background:                             var(--base-disabled-background-text);
    }
    .video-loader.loading .loading-animation{
        background: red;
    }
    .form-container{
        background:                         var(--base-background-text);

        border:                             3px solid #000;
        border-radius:                      10px;

        position:                           fixed;
        z-index:                            100;
        top:                                100px;
        left:                               100px;
    }
    .form-header{
        width:                              100%;
        flex-grow:                          1;

        display:                            flex;
        flex-flow:                          row nowrap;
    }
    .form-title{
        flex-grow:                          1;
    }
    .form-close{
        width:                              20px;
        height:                             20px;
    }
    .create-video-form{

        display:                            flex;
        flex-flow:                          column nowrap;

        padding:                            20px;
    }
    .form-group .col-sm-10{
        padding-left: 0;
    }
    .form-group .col-sm-9{
        padding-right: 0;
    }

    .transparent{
        opacity: 0;
    }
</style>
{%  endblock %}

{% block scripts %}
    <script src="{{ asset('bundles/frontend/js/Repository.js') }}"></script>
    <script src="{{ asset('bundles/frontend/js/VideoApiController.js') }}"></script>
<script>
    function Video(dto) {
        var self = this;
        self.dto = dto;

        self.id = dto.id;
        self.name = dto.name;
        self.url = dto.url;
        self.created = dto.created;

        self.platform = dto.platform;
        self.event = dto.event;

        self.shouldDelete = false;
        self.hasChanged = function () {
            if(dto.name != self.name) return true;
            if(dto.url != self.url) return true;
            //noinspection JSValidateTypes
            if(dto.created != self.created) return true;
            if(dto.platform != self.platform) return true;
            if(dto.event != self.event) return true;

            return false;
        }
    }
    var app = angular.module("AdminAllVideos",['Repository']);
    app.controller('AllVideosEdit',['$scope','VideoRepo','PlatformRepo','EventRepo',
                        function ($scope,Videos,Platforms,Events) {
        var self = this;

        self.Videos = Videos;
        self.allVideos = new Array();
        self.selectedDeletes = [];

        self.Platforms = Platforms;
        self.Events = Events;

        var isVideoNew = function (repoVideo) {
            if(self.allVideos.length == 0){
                return true;
            }
            self.allVideos.forEach(function (modelVideo) {
                if(modelVideo.id == repoVideo.id){
                    return false;
                }
            });
            return true;
        };

        self.load = function(){
            self.Videos.read(function (videos, errors) {
                if(null != errors){
                    console.log('Error:'+errors);
                    return;
                }
                videos.forEach(function (repoVideo) {
                    if(isVideoNew(repoVideo)){
                        self.allVideos.push(new Video(repoVideo));
                    }
                });
            });
            self.Platforms.read();
            self.Events.read();
        };
        self.reload = function () {
            self.allVideos = new Array();
            self.load();
        };

        self.isFormVisible = false;
        self.showForm = function(){ self.isFormVisible=true; };
        self.closeForm = function(){ self.isFormVisible=false; };

        self.deleteSelected = function(){
            self.allVideos.forEach(function (video) {
                console.log("Delete: "+video.id+" "+video.name+" "+video.shouldDelete);
            });
        };
        self.canDelete = function () {
            self.selectedDeletes = [];
            self.allVideos.forEach(function (video) {
                if(true == video.shouldDelete){
                    self.selectedDeletes.push(video);
                }
            });
            return self.selectedDeletes.length>0;
        };
        self.cancelDeleteAttempt = function(){
            self.allVideos.forEach(function (video) {
                console.log("Cancel Delete: "+video.id+" "+video.name+" "+video.shouldDelete);
                video.shouldDelete  = false;
            });
        };

        self.load();
//        self.RepositoryListener = window.setInterval(function(){
//            if(self.Videos.all.length>self.allVideos.length){
//                self.Videos.read(self.onRead);
//            }
//            $scope.$apply();
//        },1000);
    }]);
    app.controller('VideoForm',['VideoRepo','PlatformRepo','EventRepo',function (Videos,Platforms,Events) {
        var self = this;
        self.name = "";
        self.url = "";
        self.created = null;

        self.platform = null;
        self.event = null;

        self.Videos = Videos;
        self.Platforms = Platforms;
        self.Events = Events;

        self.create = function () {
            var dto = { name: self.name,
                url: self.url,
                created: self.created,
                platform: self.platform.id,
                event: self.event.id
            };
            console.log(dto);
            self.Videos.create(dto,function(data,errors){
                if(null != errors){
                    console.log('Error:'+errors);
                    return;
                }
                console.log(data);
            });
        };
        self.Platforms.read();
        self.Events.read();
    }]);
    app.config(function($interpolateProvider){
        $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
    });
</script>
{%  endblock %}


{% block headerContent %}

{%  endblock %}

{% block mainContent %}
    <div class="sub-root" ng-app="AdminAllVideos" ng-controller="AllVideosEdit as videosCtrl">
        <div class="tool-box">
            <div class="btn-group" role="group">
                <button class="btn btn-lg btn-default" ng-click="videosCtrl.reload()">
                    <span class="sr-only">Neuladen</span>
                    <span class="transparent">.</span>
                    <span class="glyphicon glyphicon-refresh"></span>
                    <span class="transparent">.</span>
                </button>
            </div>
            <div class="btn-group" role="group">
                <button class="btn btn-lg btn-default show-form" ng-click="videosCtrl.showForm()">
                    <span>Neues Video</span>
                    <span class="glyphicon glyphicon-plus"></span>
                </button>
                <button class="btn btn-lg btn-danger center-block show-form" ng-click="videosCtrl.deleteSelected()"
                        ng-disabled="!videosCtrl.canDelete()">
                    <span>Video<span ng-class="{transparent:videosCtrl.selectedDeletes.length<2}">s</span> LÃ¶schen</span>
                    <span class="glyphicon glyphicon-trash"></span>
                </button>

            </div>
        </div>
        <div class="video-list">
            <form class="video panel panel-default" ng-repeat="video in videosCtrl.allVideos">
                <div class="panel-heading">
                    <fieldset class="form-group">
                        <label class="sr-only" for="{[{ 'video-name-'+video.id }]}">Name</label>
                        <div class="col-sm-10">
                            <input class="video-name form-control input-lg" ng-model="video.name"
                                   id="{[{ 'video-name-'+video.id }]}" placeholder="Name"/>
                        </div>
                        <div class="has-warning checkbox-inline pull-right">
                            <label class="" for="{[{ 'delete-check-'+video.id }]}">
                                <span class="sr-only">
                                    LÃ¶sohen
                                </span>
                                <input class="close-check" id="{[{ 'delete-check-'+video.id }]}"
                                       ng-model="video.shouldDelete"
                                       name="delete" type="checkbox"/>
                                <span>
                                    <span class="glyphicon glyphicon-remove"></span>
                                </span>
                            </label>
                        </div>
                    </fieldset>
                </div>
                <div class="panel-body">
                    <div class="video-label-list">
                        <fieldset class="form-group form-group-lg">
                            <label for="{[{ 'video-url-'+video.id }]}" class="control-label col-sm-3">URL</label>
                            <div class="col-sm-9">
                                <input class="video-url form-control input-lg" ng-model="video.url"
                                       id="{[{ 'video-url-'+video.id }]}" placeholder="URL"/>
                            </div>
                        </fieldset>
                        <fieldset class="form-group form-group-lg">
                            <label for="{[{ 'video-created-'+video.id }]}" class="control-label col-sm-3">Erstellt</label>
                            <div class="col-sm-9">
                                <input class="video-created form-control input-lg" ng-model="video.created"
                                       id="{[{ 'video-created-'+video.id }]}" placeholder="Erstellt"/>
                            </div>
                        </fieldset>
                        <fieldset class="form-group form-group-lg">
                            <div class="col-sm-10">
                                <label for="{[{ 'video-platform-'+video.id }]}" class="sr-only">Platform</label>
                                <select ng-model="video.platform" id="{[{ 'video-platform-'+video.id }]}"
                                        ng-options="platform.name for platform in videosCtrl.Platforms.all track by platform.id"
                                        class="form-control input-lg">
                                    <option value="">WÃ¤hle eine Platform Aus</option>
                                </select>
                            </div>
                            <button class="btn btn-lg btn-default col-sm-2" role="button" title="Platform hinzufÃ¼gen">
                                <span class="glyphicon glyphicon-plus"></span>
                            </button>
                        </fieldset>
                        <fieldset class="form-group">
                            <div class="col-sm-10">
                                <label for="{[{ 'video-event-'+video.id }]}" class="sr-only">Event</label>
                                <select ng-model="video.event" id="{[{ 'video-event-'+video.id }]}"
                                        ng-options="event.name for event in videosCtrl.Events.all track by event.id"
                                        class="form-control input-lg">
                                    <option value="">WÃ¤hle eine Event Aus</option>
                                </select>

                            </div>
                            <button class="btn btn-lg btn-default col-sm-2" role="button" title="Event hinzufÃ¼gen">
                                <span class="glyphicon glyphicon-plus"></span>
                            </button>
                        </fieldset>
                    </div>
                    <div class="video-player-container">
                    </div>
                    <button class="btn btn-primary btn-lg btn-block">
                        <span class="video-loader-text">Load</span>
                        <span class="loading-animation"></span>
                    </button>
                </div>
                <div class="panel-footer" ng-show="video.hasChanged()">
                    <button type="button" class="btn btn-lg btn-success">
                        <span>Speichern</span>
                        <span class="glyphicon glyphicon-upload" aria-hidden="true"></span>
                    </button>
                    <button type="button" class="btn btn-lg btn-danger">
                        <span>Verwerfen</span>
                        <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                    </button>
                </div>
            </form>
        </div>
        <div class="form-container" ng-show="videosCtrl.isFormVisible" ng-controller="VideoForm as videoForm">
            <div class="form-header">
                <span class="label form-title">Neues Video</span>
                <span class="button form-close" ng-click="videosCtrl.closeForm()">X</span>
            </div>
            <form class="create-video-form">
                <fieldset class="form-group">
                    <label class="control-label col-sm-3" for="video-form-name">Name:</label>
                    <div class="col-sm-9">
                        <input class="form-control input-lg" ng-model="videoForm.name" name="name" id="video-form-name"/>
                    </div>
                </fieldset>
                <fieldset class="form-group">
                    <label class="control-label col-sm-3" for="video-form-url">Url:</label>
                    <div class="col-sm-9">
                        <input class="form-control input-lg" ng-model="videoForm.url" name="url" id="video-form-url"/>
                    </div>
                </fieldset>
                <fieldset class="form-group">
                    <label class="control-label col-sm-3" for="video-form-created">Erstellt:</label>
                    <div class="col-sm-9">
                        <input class="form-control input-lg" ng-model="videoForm.created"
                               name="created" id="video-form-created"/>
                    </div>
                </fieldset>
                <fieldset class="form-group">
                    <div class="col-sm-10">
                        <label class="sr-only" for="video-form-platform">Platform:</label>
                        <select ng-model="videoForm.platform" id="video-form-platform"
                                ng-options="platform.name for platform in videoForm.Platforms.all"
                                class="form-control input-lg">
                            <option value="">WÃ¤hle eine Platform Aus</option>
                        </select>
                    </div>
                    <button class="btn btn-default col-sm-2" role="button" title="Platform hinzufÃ¼gen">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                </fieldset>
                <fieldset class="form-group">
                    <div class="col-sm-10">
                        <label class="sr-only" for="video-form-event">Event:</label>
                        <select ng-model="videoForm.event" id="video-form-event"
                                ng-options="event.name for event in videoForm.Events.all"
                                class="form-control input-lg">
                            <option value="">WÃ¤hle ein Event Aus</option>
                        </select>
                    </div>
                    <button class="btn btn-default col-sm-2" role="button" title="Event hinzufÃ¼gen">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                </fieldset>
                <button class="btn btn-primary btn-lg btn-block" ng-click="videoForm.create()">
                    Erstellen
                </button>
            </form>
        </div>
    </div>
{% endblock %}

{% block footerContent %}

{%  endblock %}